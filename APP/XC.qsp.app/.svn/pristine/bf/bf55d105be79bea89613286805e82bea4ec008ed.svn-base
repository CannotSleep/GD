<template>
	<view class="content">
		<view class="input-row">
			<view class="input-label">
				<image src="http://xcbucket.oss-cn-beijing.aliyuncs.com/%E6%98%9F%E5%B1%82%E7%8E%B0%E5%9C%BA%E7%AE%A1%E7%90%86APP/img/Site/hnt/list1_icon2-03.png"
				 mode=""></image>
				<text>项目名称:</text>
			</view>
			<picker @change="changeProject" :value="projectIndex" :range="projectList" range-key="text">
				<view class="uni-input">{{projectText}}</view>
			</picker>
		</view>
		<view class="input-row">
			<view class="input-label">
				<image src="../../../static/img/list1_icon/list1_icon-01.png" mode=""></image>
				<text>测量部位:</text>
			</view>
			<input type="text" value="" placeholder="请填写测量部位" />
		</view>
		<view class="input-row">
			<view class="input-label">
				<image src="../../../static/img/list1_icon/list1_icon-01.png" mode=""></image>
				<text>楼层:</text>
			</view>
			<input type="text" value="" placeholder="请填写测量部位" v-model="Floor"/>
		</view>
		<view class="input-row">
			<view class="input-label">
				<image src="../../../static/img/list1_icon/list1_icon-01.png" mode=""></image>
				<text>混凝土强度设计等级:</text>
			</view>
			<picker @change="changeGrade" :value="grade" :range="gradeList" range-key="text">
				<view class="uni-input">{{gradeList[grade].text}}</view>
			</picker>
		</view>
		<view class="input-row">
			<view class="input-label">
				<image src="../../../static/img/list1_icon/list1_icon-13.png" mode=""></image>
				<text>砼浇筑时间:</text>
			</view>
			<picker mode="date" :value="ConcreteDate" start="2018-09-26" end="2028-12-31" @change="changeConcreteDate">
				<view class="uni-input">{{ConcreteDate}}</view>
			</picker>
		</view>
		<view class="input-row">
			<view class="input-label">
				<image src="../../../static/img/list1_icon/list1_icon-01.png" mode=""></image>
				<text>测量部位:</text>
			</view>
			<input type="text" :value="TestState" placeholder="" v-model="TestState" disabled="disabled" />
		</view>
		<view class="input-row">
			<view class="input-label">
				<image src="../../../static/img/list1_icon/list1_icon-01.png" mode=""></image>
				<text>构件类型:</text>
			</view>
			<picker @change="changeComponent" :value="ComponentIndex" :range="ComponentList" range-key="text">
				<view class="uni-input">{{ComponentList[ComponentIndex].text}}</view>
			</picker>
		</view>
		<view class="input-row">
			<view class="input-label">
				<image src="../../../static/img/list1_icon/list1_icon-01.png" mode=""></image>
				<text>日平均温度:</text>
			</view>
			<input type="text" value="" placeholder="请填写日平均温度" v-model="Temperature"/>
		</view>
		<view class="input-row">
			<view class="input-label">
				<image src="../../../static/img/list1_icon/list1_icon-13.png" mode=""></image>
				<text>检查日期:</text>
			</view>
			<picker mode="date" :value="checkDate" start="2018-09-26" end="2028-12-31" @change="changeCheckDate">
				<view class="uni-input">{{checkDate}}</view>
			</picker>
		</view>
		<view class="input-row">
			<view class="input-label">
				<image src="../../../static/img/list1_icon/list1_icon-13.png" mode=""></image>
				<text>测量数据:</text>
			</view>
			<view class="data-row">
				<button size="mini" type="default" @tap="addDatas">添加数据</button>
			</view>
		</view>
		<block v-for="(item,index) in dataList" :key="index" v-if="isAdd">
			<view class="input-row" v-if="isAdd">
				<view class="input-label">
					数据:{{item.dataNum}}
				</view>
				<input type="text" v-model="item.dataInput" placeholder="请输入测量数据">
			</view>
		</block>
		<view class="button-row mt-20">
			<button type="primary" size="mini" @tap="submit">提交</button>
			<button type="default" size="mini">暂存</button>
		</view>
	</view>
</template>

<script>
	import server from '../../../store/server.js';
	export default {
		onLoad() {
			this.testToken=server.net.GetLocalToken();
			this.getProject()
		},
		data() {
			return {
				projectList: [],
				projectIndex: 0,
				projectVal: '',
				projectText: '',
				gradeList: [{
					value: 'C15',
					text: 'C15'
				}, {
					value: 'C20',
					text: 'C20'
				}, {
					value: 'C25',
					text: 'C25'
				}, {
					value: 'C30',
					text: 'C30'
				}, {
					value: 'C35',
					text: 'C35'
				}, {
					value: 'C40',
					text: 'C40'
				}, {
					value: 'C45',
					text: 'C45'
				}, {
					value: 'C50',
					text: 'C50'
				}, {
					value: 'C55',
					text: 'C55'
				}, {
					value: 'C60',
					text: 'C60'
				}],
				grade: 0,
				checkDate: '2018-09-26',
				ConcreteDate:'2018-09-26',
				ComponentList: [{
					value: 0,
					text: '墙柱'
				}, {
					value: 1,
					text: '梁板'
				}],
				ComponentIndex: 0,
				ComponentVal: '',
				TestState: '侧面',
				isAdd: true,
				tapTimes: 0,
				dataList: [],
				Floor:'',
				Temperature:''

			}
		},
		methods: {
			getProject() { //获取项目数据
				let url = server.net.setUrl('api/DropDownListApi/GetProject');
				uni.request({
					url: url,
					method: 'GET',
					header: {
						//token: server.net.GetSessionToken(),
						token: this.testToken
					},
					
					success: (data) => {
						let jsondata = data.data;
						let dataArr = jsondata.data;
						
						let first={
							value:"08876894",
							text:"请选择项目"
						}
						dataArr.unshift(first)
						
						if (jsondata.status = 1) {
							this.projectList = this.setData(dataArr);
							this.projectVal = this.projectList[this.projectIndex].value;
							this.projectText = this.projectList[this.projectIndex].text;
						} else {
							console.log("项目获取失败" + jsondata.status);
						}
					},
					fail: (data, code) => {
						console.log("项目数据请求失败" + data + code)
					},
					complete: () => {}
				});
			},
			addDatas() {
				//this.isAdd = true;
				let addTimes = this.dataList.length + 1;
				if (addTimes < 16) {
					this.dataList.push({
						dataNum: addTimes
					});
					addTimes += 1;
				} else {
					console.log(this.dataList)
					uni.showToast({
						title: '最多添加16条'
					})
					return false;
				}
			},
			changeCheckDate(e) {
				this.checkDate = e.detail.value;
			},
			changeConcreteDate(e){
				this.ConcreteDate = e.detail.value;
			},
			changeComponent(e) {
				this.ComponentIndex = e.detail.value;
			},
			changeGrade(e) {
				this.grade = e.detail.value;
			},
			changeProject(e) {
				this.projectIndex = e.detail.value;
				this.projectVal = this.projectList[e.detail.value].value;
				this.projectText = this.projectList[this.projectIndex].text;
			},
			setData: function(items) { //设置两个picker的数据
				let newItems = [];
				items.forEach((e) => {
					newItems.push({
						text: e.text,
						value: e.value
					}); 
				});
				return newItems;
			},
			submit() {
				let url = server.net.setUrl('api/QualityConcreteBackApi/AddOrUpdate');
				let newItems = [];
				for (let i in this.dataList) {
					newItems.push(this.dataList[i].dataInput);
				}
				console.log(newItems);
				let ajaxdata = {
					ProjectID: this.projectVal, //项目ID
					ProjectName:this.projectText,
					Grade: this.grade,
					Floor:this.Floor,
					TestState: this.TestState,
					CheckPeople: server.net.GetUser().ID, //检查人
					ConcreteDate: this.ConcreteDate, //检查日期
					CheckDate:this.checkDate,
					ComponentType:this.ComponentVal,
					Temperature:this.Temperature,
					Remark:'',
					DetailCollection: [{
						Name:'1',
						DataAttr:newItems		
					}]
				};
				console.log(ajaxdata);
				uni.request({
					url: url,
					method: 'POST',
					header: {
						Token: this.testToken
					},
					data: JSON.stringify(ajaxdata),
					success: res => {
						let result = res.data;
						let jsondata = result.data;
						if (result.status == 1) {
							uni.showToast({
								title: '提交成功',
								mask: false,
								duration: 1500
							});
							setTimeout(function() {
								uni.navigateBack({
									delta: 1
								})
							}, 2000)
						} else {
							console.log(result.message);
							uni.showToast({
								title: '请填写正确数据',
								mask: false,
								duration: 1500
							});
						}
					},
					fail: () => {
						console.log("实测实量提交失败");
					},
					complete: () => {}
				});
			}
		}
	}
</script>

<style scoped>
	.input-label {
		width: 45%;
	}

	picker,
	input {
		width: 55%;
	}

	.data-row {
		width: 55%;
		display: flex;
		flex-direction: row;
		justify-content: flex-end;
		padding: 15px 0px;
	}

	.data-row button {
		color: #fff;
		background-color: #17A869;
		border: none;
	}
</style>
